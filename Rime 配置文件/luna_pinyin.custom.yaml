# luna_pinyin.custom.yaml
#
# 补靪功能：将朙月拼音的词库修改为朙月拼音扩充词库
#
# 作者：瑾昀 <cokunhui@gmail.com>
#
# 部署位置：
# ~/.config/ibus/rime  (Linux)
# ~/Library/Rime  (Mac OS)
# %APPDATA%\Rime  (Windows)
#
# 于重新部署后生效
#
#
# 注意：本补靪适用于所有朙月拼音系列方案（“朙月拼音”、“朙月拼音·简化字”、“朙月拼音·台湾正体”、“朙月拼音·语句流”）。
# 只须将本 custom.yaml 的前面名字改为对应的输入方案名字然后放入用户文件夹重新部署即可。如 luna_pinyin_simp.custom.yaml。
# 双拼用户请使用 double_pinyin.custom.yaml。
#
#
# 附朙月拼音系列方案与其对应的 id 一览表：
# 输入方案	id
# 朙月拼音	luna_pinyin
# 朙月拼音·简化字	luna_pinyin_simp
# 朙月拼音·台湾正体	luna_pinyin_tw
# 朙月拼音·语句流	luna_pinyin_fluency
#

patch:    
  # 载入朙月拼音扩充词库
  "translator/dictionary": luna_pinyin.extended
  # 改写拼写运算，使得含西文的词汇（位于 luna_pinyin.cn_en.dict.yaml 中）不影响简拼功能（注意，此功能只适用于朙月拼音系列方案，不适用于各类双拼方案）
  # 本条补靪只在“小狼毫 0.9.30”、“鼠须管 0.9.25 ”、“Rime-1.2”及更高的版本中起作用。
  "speller/algebra/@before 0": xform/^([b-df-np-z])$/$1_/
  #"switches/@0/reset": 1  #表示将 switcher 列表中的第一个元素（即 ascii_mode 开关）的初始值重设为状态1（即“英文”）。
#模糊拼音
  'speller/algebra':
    - erase/^xx$/                      # 第一行保留
    # 模糊音定义
    # 需要哪组就删去行首的 # 号，单双向任选
    #- derive/^([zcs])h/$1/             # zh, ch, sh => z, c, s
    #- derive/^([zcs])([^h])/$1h$2/     # z, c, s => zh, ch, sh

    #- derive/^n/l/                     # n => l
    #- derive/^l/n/                     # l => n

    # 这两组一般是单向的
    #- derive/^r/l/                     # r => l

    #- derive/^ren/yin/                 # ren => yin, reng => ying
    #- derive/^shen/sehn/
    #- derive/^r/y/                     # r => y

    # 下面 hu <=> f 这组写法复杂一些，分情况讨论
    #- derive/^hu$/fu/                  # hu => fu
    #- derive/^hong$/feng/              # hong => feng
    #- derive/^hu([in])$/fe$1/          # hui => fei, hun => fen
    #- derive/^hu([ao])/f$1/            # hua => fa, ...

    #- derive/^fu$/hu/                  # fu => hu
    #- derive/^feng$/hong/              # feng => hong
    #- derive/^fe([in])$/hu$1/          # fei => hui, fen => hun
    #- derive/^f([ao])/hu$1/            # fa => hua, ...

    # 韵母部份
    #- derive/^([bpmf])eng$/$1ong/      # meng = mong, ...
    #- derive/([ei])n$/$1ng/            # en => eng, in => ing
    #- derive/([ei])ng$/$1n/            # eng => en, ing => in
 
    #自制
    #- derive/^([sj])hen$/$1ehn/

    # 样例足够了，其他请自己总结……

    # 反模糊音？
    # 谁说方言没有普通话精确、有模糊音，就能有反模糊音。
    # 示例为分尖团的中原官话：
    #- derive/^ji$/zii/   # 在设计者安排下鸠占鹊巢，尖音i只好双写了
    #- derive/^qi$/cii/
    #- derive/^xi$/sii/
    #- derive/^ji/zi/
    #- derive/^qi/ci/
    #- derive/^xi/si/
    #- derive/^ju/zv/
    #- derive/^qu/cv/
    #- derive/^xu/sv/
    # 韵母部份，只能从大面上覆盖
    #- derive/^([bpm])o$/$1eh/          # bo => beh, ...
    #- derive/(^|[dtnlgkhzcs]h?)e$/$1eh/  # ge => geh, se => sheh, ...
    #- derive/^([gkh])uo$/$1ue/         # guo => gue, ...
    #- derive/^([gkh])e$/$1uo/          # he => huo, ...
    #- derive/([uv])e$/$1o/             # jue => juo, lve => lvo, ...
    #- derive/^fei$/fi/                 # fei => fi
    #- derive/^wei$/vi/                 # wei => vi
    #- derive/^([nl])ei$/$1ui/          # nei => nui, lei => lui
    #- derive/^([nlzcs])un$/$1vn/       # lun => lvn, zun => zvn, ... 
    #- derive/^([nlzcs])ong$/$1iong/    # long => liong, song => siong, ...
    # 这个办法虽从拼写上做出了区分，然而受词典制约，候选字仍是混的。
    # 只有真正的方音输入方案才能做到！但“反模糊音”这个玩法快速而有效！

    # 模糊音定义先于简拼定义，方可令简拼支持以上模糊音
    - abbrev/^([a-z]).+$/$1/           # 简拼（首字母）
    - abbrev/^([zcs]h).+$/$1/          # 简拼（zh, ch, sh）

    # 以下是一组容错拼写，《汉语拼音》方案以前者为正
    #- derive/^([nl])ve$/$1ue/          # nve = nue, lve = lue
    #- derive/^([jqxy])u/$1v/           # ju = jv,
    #- derive/un$/uen/                  # gun = guen,
    #- derive/ui$/uei/                  # gui = guei,
    #- derive/iu$/iou/                  # jiu = jiou,

    # 自动纠正一些常见的按键错误
    - derive/([aeiou])ng$/$1gn/        # dagn => dang
    - derive/([dtngkhrzcs])o(u|ng)$/$1o/  # zho => zhong|zhou
    - derive/ong$/on/                  # zhonguo => zhong guo
    - derive/ao$/oa/                   # hoa => hao
    - derive/([iu])a(o|ng?)$/a$1$2/    # tain => tian

  # 分尖团后 v => ü 的改写条件也要相应地扩充：
  #'translator/preedit_format':
  #  - "xform/([nljqxyzcs])v/$1ü/"

  switches:
    - name: ascii_mode
      reset: 0
      states: [ 中文, 西文 ]
    - name: emoji_suggestion
      reset: 1
      states: [ "No", "Yes" ]
    - name: full_shape
      states: [ 半角, 全角 ]
    - name: simplification
      reset: 1
      states: [ 汉字, 汉字 ]
    - name: ascii_punct
      states: [ 。，, ．， ]
  engine/translators:
    - punct_translator
    - script_translator
    - table_translator@custom_phrase
  engine/filters:
    - simplifier@emoji_suggestion # 不需要表情的注释这一行
    #- simplifier@zh_simp
    - simplifier
    - uniquifier
    #- charset_filter@gbk
    #- single_char_filter
  engine/processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  # engine/segmentors:
  #   - ascii_segmentor
  #   - matcher
  #   - abc_segmentor
  #   - punct_segmentor
  #   - fallback_segmentor

  # 不需要表情的注释下面三行
  emoji_suggestion:
    opencc_config: emoji.json
    option_name: emoji_suggestion
    # tips: all
  reverse_lookup: {}
  punctuator:
    # import_preset: default
    half_shape:
      ',' : { commit: ， }
      '.' : { commit: 。 }
      '^' : { commit: …… }
      '!' : { commit: ！ }
      '"' : { pair: [ '“', '”' ] }
      '?' : { commit: ？ }
      ';' : { commit: ； }
      ':' : { commit: ： }
      '~' : ～
      '\' : 、
      '#' : '#'
      '*' : '*'
      '@' : '@'
      '{' : [ 『, 〖, ｛ ]
      '}' : [ 』, 〗, ｝ ]
      "$" : ["¥", "$", "€", "£", "¢", "¤"]
      "<" : ["《", "〈", "«", "<"]
      ">" : ["》", "〉", "»", ">"]

  #标点
  'punctuator/import_preset': symbols
  'recognizer/patterns/punct': "^/([a-z]+|[0-9])$"

  # 自定义词库
  custom_phrase:
    dictionary: ""
    user_dict: custom_phrase
    db_class: stabledb
    enable_completion: false
    enable_sentence: false
    initial_quality: 1
  "engine/translators/@5": table_translator@custom_phrase